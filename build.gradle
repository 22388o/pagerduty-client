buildscript {
  repositories {
    maven { url = 'https://plugins.gradle.org/m2/' }
  }
  dependencies {
    classpath "org.javamodularity:moduleplugin:+"
    classpath "pl.allegro.tech.build:axion-release-plugin:+"
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:+"
  }
}

subprojects {
  apply plugin: 'java-library'
  apply plugin: 'org.javamodularity.moduleplugin'
  apply plugin: 'pl.allegro.tech.build.axion-release'
  apply plugin: 'maven-publish'

  scmVersion {
    tag {
      prefix = ''
    }
    repository {
      pushTagsOnly = true
    }
  }

  project.group = 'systems.comodal'
  project.version = scmVersion.version

  sourceCompatibility = JavaVersion.VERSION_12

  ext {
    bintrayOrg = 'comodal'
    bintrayRepo = 'libraries'
    vcsUrl = 'https://github.com/comodal/pagerduty-client'
  }

  repositories {
    mavenCentral()
    jcenter()
    maven { url = 'https://dl.bintray.com/comodal/libraries' }
  }

  configurations.all {
    resolutionStrategy {
      cacheDynamicVersionsFor 15, 'minutes'
      cacheChangingModulesFor 15, 'minutes'
    }
  }

  dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:+'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:+'
  }

  compileJava {
    options.compilerArgs = ['--enable-preview']
  }

  compileTestJava {
    options.compilerArgs = ['--enable-preview']
  }

  test {
    useJUnitPlatform()
    jvmArgs = ['--enable-preview', '-XX:+UnlockExperimentalVMOptions', '-XX:+UseJVMCICompiler']
    maxParallelForks = 4
    testLogging {
      events "passed", "skipped", "failed", "standardOut", "standardError"
    }
  }

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  artifacts {
    archives sourcesJar
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        from components.java
        artifact sourcesJar
        groupId project.group
        artifactId project.name
        version = project.version
      }
    }
  }
}
