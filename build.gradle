buildscript {
  configurations.all {
    resolutionStrategy {
      cacheDynamicVersionsFor 180, 'minutes'
      cacheChangingModulesFor 180, 'minutes'
    }
  }
  repositories {
    maven { url = 'https://plugins.gradle.org/m2/' }
  }
  dependencies {
    classpath "pl.allegro.tech.build:axion-release-plugin:+"
  }
}

ext {
  // Used by systems.comodal.pagerduty_event_json_iterator_adapter
  jsoniter = "2.5.+" // https://github.com/comodal/json-iterator/releases
}

apply plugin: 'pl.allegro.tech.build.axion-release'

scmVersion {
  tag.prefix = ''
  repository.pushTagsOnly = true
}

final JLV = JavaLanguageVersion.of(project.findProperty('targetJava') as Integer ?: 16)

subprojects {
  apply plugin: 'java-library'

  plugins.withType(JavaPlugin).configureEach {
    java {
      modularity.inferModulePath = true
      toolchain {
        languageVersion = JLV
      }
    }
  }

  project.group = 'systems.comodal'
  project.version = scmVersion.version

  repositories {
    mavenCentral()
  }

  configurations.all {
    resolutionStrategy {
      cacheDynamicVersionsFor 15, 'minutes'
      cacheChangingModulesFor 15, 'minutes'
    }
  }

  dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:+'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:+'
  }

  test {
    useJUnitPlatform()
    maxParallelForks = 4
    testLogging {
      events "passed", "skipped", "failed", "standardOut", "standardError"
      exceptionFormat "full"
      showStandardStreams true
    }
  }

  task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
  }

  task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
  }

  javadoc {
    options.addBooleanOption('html5', true)
  }
}
